@model<spiking_psystems>

/* Auxiliary parameters */
m  = 22;
T  = 7*(m+110);
l0 = 7*(0+2);

/* Main method */
def main()
{
	/* Neuron definition */
	@mu = state;
	{
		@mu += r{i};
		@marcs += (r{i},state), (state, r{i});
	} : 0 <= i <= 7;	
	
 /* Synapse graph definition: edges (arcs) */
	@marcs += (r{7}, r{1}), (r{7}, r{2}), (r{0}, r{6}), (r{6}, environment);
 /* The input neuron */
	@min = r{7};
	
	/* Initial spikes in neuron state to simulate the instruction l0 */
  /* Initial spikes in neuron 1 to encode the number 23 in register 1 */
  /* Initial spikes in neuron 2 to encode the number 1 in register 2 */
  @ms(state) = a*938;
  /*@ms(r{1})  = a*828;
	@ms(r{2})  = a*59;*/
  @ms(r{1})  = a*36;
	@ms(r{2})  = a*59;
    
	
	/* Instructions for simulating the universal register machine U_{32}*/
	/* The corresponding calls to modules */
  call SUB(0, 1, 1, 2); /*Initiate the simulation of the instruction l0*/
	call ADD(1, 7, 0);
	call ADD(2, 6, 3);
	call SUB(3, 5, 2, 4);
	call SUB(4, 6, 5, 3);
	call ADD(5, 5, 6);
	call SUB(6, 7, 7, 8);
	call ADD(7, 1, 4);
	call SUB(8, 6, 9, 0);
	call ADD(9, 6, 10);
	call SUB(10, 4, 0, 11);
	call SUB(11, 5, 12, 13);
	call SUB(12, 5, 14, 15);
	call SUB(13, 2, 18, 19);
	call SUB(14, 5, 16, 17);
	call SUB(15, 3, 18, 20);
	call ADD(16, 4, 11);
	call ADD(17, 2, 21);
	call SUB(18, 4, 0, 22);
	call SUB(19, 0, 0, 18);
	call ADD(20, 0, 0);
	call ADD(21, 3, 18);
	call HALT(22);
}

def INPUT()
{
	/* RState_INPUT */
	["a{3}" / +(T+l0-3)]'state;
	
	/* R7_INPUT */
	[a --> a]'r{7};
	
	/* R1_INPUT */
	["(a{36})*a" / +36]'r{1};
	["(a{36})*a{3}" / -3]'r{1};
	
	/* R2_INPUT */
	["(a{59})*a{2}" / +59]'r{2};
	["(a{59})*a{3}" / -3]'r{2};
}

def ADD(i, n, j)
{				
	let li = 7*(i+2);
	let lj = 7*(j+2);
	
	/* Rstate_ADD */
	[a*(T+li-lj) --> a*22]'state 'a{T+li}' : n==0;
	[a*(T+li-lj) --> a*36]'state 'a{T+li}' : n==1;
	[a*(T+li-lj) --> a*59]'state 'a{T+li}' : n==2;
	[a*(T+li-lj) --> a*104]'state 'a{T+li}' : n==3;
	[a*(T+li-lj) --> a*171]'state 'a{T+li}' : n==4;
	[a*(T+li-lj) --> a*194]'state 'a{T+li}' : n==5;
	[a*(T+li-lj) --> a*283]'state 'a{T+li}' : n==6;
	[a*(T+li-lj) --> a*746]'state 'a{T+li}' : n==7;
	
	['a{lj}' / +T]'state;
	
	/* R0_ADD */
	["(a{22})*a{36}" / -36]'r{0} : n==1;
	["(a{22})*a{59}" / -59]'r{0} : n==2;
	["(a{22})*a{104}" / -104]'r{0} : n==3;
	["(a{22})*a{171}" / -171]'r{0} : n==4;
	["(a{22})*a{194}" / -194]'r{0} : n==5;
	["(a{22})*a{283}" / -283]'r{0} : n==6;
	["(a{22})*a{746}" / -746]'r{0} : n==7;
	
	/* R1_ADD */
	["(a{36})*a{22}" / -22]'r{1} : n==0;
	["(a{36})*a{59}" / -59]'r{1} : n==2;
	["(a{36})*a{104}" / -104]'r{1} : n==3;
	["(a{36})*a{171}" / -171]'r{1} : n==4;
	["(a{36})*a{194}" / -194]'r{1} : n==5;
	["(a{36})*a{283}" / -283]'r{1} : n==6;
	["(a{36})*a{746}" / -746]'r{1} : n==7;
	
	/* R2_ADD */
	["(a{59})*a{22}" / -22]'r{2} : n==0;
	["(a{59})*a{36}" / -36]'r{2} : n==1;
	["(a{59})*a{104}" / -104]'r{2} : n==3;
	["(a{59})*a{171}" / -171]'r{2} : n==4;
	["(a{59})*a{194}" / -194]'r{2} : n==5;
	["(a{59})*a{283}" / -283]'r{2} : n==6;
	["(a{59})*a{746}" / -746]'r{2} : n==7;
	
	/* R3_ADD */
	["(a{104})*a{22}" / -22]'r{3} : n==0;
	["(a{104})*a{36}" / -36]'r{3} : n==1;
	["(a{104})*a{59}" / -59]'r{3} : n==2;
	["(a{104})*a{171}" / -171]'r{3} : n==4;
	["(a{104})*a{194}" / -194]'r{3} : n==5;
	["(a{104})*a{283}" / -283]'r{3} : n==6;
	["(a{104})*a{746}" / -746]'r{3} : n==7;
	
	/* R4_ADD */
	["(a{171})*a{22}" / -22]'r{4} : n==0;
	["(a{171})*a{36}" / -36]'r{4} : n==1;
	["(a{171})*a{59}" / -59]'r{4} : n==2;
	["(a{171})*a{104}" / -104]'r{4} : n==3;
	["(a{171})*a{194}" / -194]'r{4} : n==5;
	["(a{171})*a{283}" / -283]'r{4} : n==6;
	["(a{171})*a{746}" / -746]'r{4} : n==7;
	
	/* R5_ADD */
	["(a{194})*a{22}" / -22]'r{5} : n==0;
	["(a{194})*a{36}" / -36]'r{5} : n==1;
	["(a{194})*a{59}" / -59]'r{5} : n==2;
	["(a{194})*a{104}" / -104]'r{5} : n==3;
	["(a{194})*a{171}" / -171]'r{5} : n==4;
	["(a{194})*a{283}" / -283]'r{5} : n==6;
	["(a{194})*a{746}" / -746]'r{5} : n==7;
	
	/* R6_ADD */
	["(a{283})*a{22}" / -22]'r{6} : n==0;
	["(a{283})*a{36}" / -36]'r{6} : n==1;
	["(a{283})*a{59}" / -59]'r{6} : n==2;
	["(a{283})*a{104}" / -104]'r{6} : n==3;
	["(a{283})*a{171}" / -171]'r{6} : n==4;
	["(a{283})*a{194}" / -194]'r{6} : n==5;
	["(a{283})*a{746}" / -746]'r{6} : n==7;
	
	/* R7_ADD */
	["(a{746})*a{22}" / -22]'r{7} : n==0;
	["(a{746})*a{36}" / -36]'r{7} : n==1;
	["(a{746})*a{59}" / -59]'r{7} : n==2;
	["(a{746})*a{104}" / -104]'r{7} : n==3;
	["(a{746})*a{171}" / -171]'r{7} : n==4;
	["(a{746})*a{194}" / -194]'r{7} : n==5;
	["(a{746})*a{283}" / -283]'r{7} : n==6;
}


def SUB(i, n, j, k)
{			
	let li = 7*(i+2);
	let lj = 7*(j+2);
	let lk = 7*(k+2);
	
	/* Rstate_SUB */
	[a*(T+6) --> a*(6+n)]'state 'a{T+li}';	
	['a{li-1}' / +(T+lj-li+1)]'state;
	['a{li-2}' / +(T+lk-li+2)]'state;
	
	/* R0_SUB */
	{
		[a*28 --> a*5]'r{0} "(a{22})+a{6}";
		[a*6 --> a*4]'r{0};
	} : n==0;
	
	["(a{22})*a{7}" / -7]'r{0} : n == 1;
	["(a{22})*a{8}" / -8]'r{0} : n == 2;
	["(a{22})*a{9}" / -9]'r{0} : n == 3;
	["(a{22})*a{10}" / -10]'r{0} : n == 4;
	["(a{22})*a{11}" / -11]'r{0} : n == 5;
	["(a{22})*a{12}" / -12]'r{0} : n == 6;
	["(a{22})*a{13}" / -13]'r{0} : n == 7;
	
	/* R1_SUB */	
	["(a{36})*a{6}" / -6]'r{1} : n == 0;
	
	{
		[a*43 --> a*5]'r{1} "(a{36})+a{7}";
		[a*7 --> a*4]'r{1};
	} : n==1;
	
	["(a{36})*a{8}" / -8]'r{1} : n == 2;
	["(a{36})*a{9}" / -9]'r{1} : n == 3;
	["(a{36})*a{10}" / -10]'r{1} : n == 4;
	["(a{36})*a{11}" / -11]'r{1} : n == 5;
	["(a{36})*a{12}" / -12]'r{1} : n == 6;
	["(a{36})*a{13}" / -13]'r{1} : n == 7;
	
	["(a{36})*a{4}" / -4]'r{1};
	["(a{36})*a{5}" / -5]'r{1};
	
	/* R2_SUB */	
	["(a{59})*a{6}" / -6]'r{2} : n == 0;
	["(a{59})*a{7}" / -7]'r{2} : n == 1;
	
	{
		[a*67 --> a*5]'r{2} "(a{59})+a{8}";
		[a*8 --> a*4]'r{2};
	} : n==2;
	
	["(a{59})*a{9}" / -9]'r{2} : n == 3;
	["(a{59})*a{10}" / -10]'r{2} : n == 4;
	["(a{59})*a{11}" / -11]'r{2} : n == 5;
	["(a{59})*a{12}" / -12]'r{2} : n == 6;
	["(a{59})*a{13}" / -13]'r{2} : n == 7;
	
	["(a{59})*a{4}" / -4]'r{2};
	["(a{59})*a{5}" / -5]'r{2};
	
	/* R3_SUB */	
	["(a{104})*a{6}" / -6]'r{3} : n == 0;
	["(a{104})*a{7}" / -7]'r{3} : n == 1;	
	["(a{104})*a{8}" / -8]'r{3} : n == 2;
	
	{
		[a*113 --> a*5]'r{3} "(a{104})+a{9}";
		[a*9 --> a*4]'r{3};
	} : n==3;
	
	["(a{104})*a{10}" / -10]'r{3} : n == 4;
	["(a{104})*a{11}" / -11]'r{3} : n == 5;
	["(a{104})*a{12}" / -12]'r{3} : n == 6;
	["(a{104})*a{13}" / -13]'r{3} : n == 7;
	
	/* R4_SUB */	
	["(a{171})*a{6}" / -6]'r{4} : n == 0;
	["(a{171})*a{7}" / -7]'r{4} : n == 1;	
	["(a{171})*a{8}" / -8]'r{4} : n == 2;
	["(a{171})*a{9}" / -9]'r{4} : n == 3;
	
	{
		[a*181 --> a*5]'r{4} "(a{171})+a{10}";
		[a*10 --> a*4]'r{4};
	} : n==4;
	
	["(a{171})*a{11}" / -11]'r{4} : n == 5;
	["(a{171})*a{12}" / -12]'r{4} : n == 6;
	["(a{171})*a{13}" / -13]'r{4} : n == 7;
	
	/* R5_SUB */	
	["(a{194})*a{6}" / -6]'r{5} : n == 0;
	["(a{194})*a{7}" / -7]'r{5} : n == 1;	
	["(a{194})*a{8}" / -8]'r{5} : n == 2;
	["(a{194})*a{9}" / -9]'r{5} : n == 3;
	["(a{194})*a{10}" / -10]'r{5} : n == 4;
	
	{
		[a*205 --> a*5]'r{5} "(a{194})+a{11}";
		[a*11 --> a*4]'r{5};
	} : n==5;
	
	["(a{194})*a{12}" / -12]'r{5} : n == 6;
	["(a{194})*a{13}" / -13]'r{5}: n == 7;
	
	/* R6_SUB */	
	{
		["(a{283})*a{4}" / -4]'r{6};
		["(a{283})*a{5}" / -5]'r{6};
		["(a{283})*a{6}" / -6]'r{6};
	} : n == 0;
	["(a{283})*a{7}" / -7]'r{6} : n == 1;	
	["(a{283})*a{8}" / -8]'r{6} : n == 2;
	["(a{283})*a{9}" / -9]'r{6} : n == 3;
	["(a{283})*a{10}" / -10]'r{6} : n == 4;
	["(a{283})*a{11}" / -11]'r{6} : n == 5;
	
	{
		[a*295 --> a*5]'r{6} "(a{283})+a{12}";
		[a*12 --> a*4]'r{6};
	} : n==6;
	
	["(a{283})*a{13}" / -13]'r{6} : n == 7;
	
	/* R7_SUB */	
	["(a{746})*a{6}" / -6]'r{7} : n == 0;
	["(a{746})*a{7}" / -7]'r{7} : n == 1;	
	["(a{746})*a{8}" / -8]'r{7} : n == 2;
	["(a{746})*a{9}" / -9]'r{7} : n == 3;
	["(a{746})*a{10}" / -10]'r{7} : n == 4;
	["(a{746})*a{11}" / -11]'r{7} : n == 5;
	["(a{746})*a{12}" / -12]'r{7} : n == 6;
	
	{
		[a*759 --> a*5]'r{7} "(a{746})+a{13}";
		[a*13 --> a*4]'r{7};
	} : n==7;

}

def HALT(h)
{
	let lh = 7*(h+2);
	
	/* Rstate_HALT */
	[a*(T+lh) --> a*4]'state 'a{T+lh}';
	["a" / -1]'state;	
	
	/* R0_HALT */
	[a*21 --> a]'r{0} "(a{22})+a{4}";
	["(a{22})+a{5}" / -22]'r{0};
	[a*5 --> a]'r{0};
	
	/* R1_HALT */
	["(a{36})*a{4}" / -4]'r{1};
	
	/* R2_HALT */
	["(a{59})*a{4}" / -4]'r{2};
	
	/* R3_HALT */
	["(a{104})*a{4}" / -4]'r{3};
	
	/* R4_HALT */
	["(a{171})*a{4}" / -4]'r{4};
	
	/* R5_HALT */
	["(a{194})*a{4}" / -4]'r{5};
	
	/* R6_HALT */
	["(a{283})*a{4}" / -4]'r{6};
	
	/* R7_HALT */
	["(a{746})*a{4}" / -4]'r{7};
}